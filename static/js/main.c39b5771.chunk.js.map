{"version":3,"sources":["utils/consts.js","components/NavBar.js","components/Login.js","components/Loader.js","routes.js","components/Chat.js","components/AppRouter.js","App.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","NavBar","auth","useContext","Context","useAuthState","user","AppBar","color","position","Toolbar","variant","Grid","container","justify","Button","onClick","signOut","to","Login","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","console","log","Container","style","height","window","innerHeight","alignItems","width","background","Box","p","Loader","className","publicRoutes","path","Component","privateRoutes","React","memo","firestore","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","scrollStatus","setScrollStatus","bottomAnchor","useRef","sendMessage","e","preventDefault","add","uid","displayName","photoURL","text","createdAt","FieldValue","serverTimestamp","useEffect","current","scrollIntoView","behavior","paddingTop","onScroll","element","currentTarget","Math","abs","scrollHeight","scrollTop","clientHeight","border","overflowY","map","message","margin","marginLeft","padding","Avatar","src","ref","direction","TextField","fullWidth","rowsMax","onChange","AppRouter","component","exact","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.c39b5771.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login'\r\nexport const CHAT_ROUTE = '/chat'","import React, {useContext} from 'react';\r\nimport {AppBar, Button, Grid, Toolbar} from \"@material-ui/core\";\r\nimport {LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst NavBar = () => {\r\n    const {auth} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n    return (\r\n        <AppBar color={'secondary'} position=\"static\">\r\n            <Toolbar variant={'dense'}>\r\n                <Grid container justify={'flex-end'}>\r\n                    {user\r\n                    ? <Button onClick={() => auth.signOut()} variant={\"outlined\"}>Выйти</Button>\r\n\r\n                    : <NavLink to={LOGIN_ROUTE}>\r\n                            <Button variant={\"outlined\"}>Login</Button>\r\n                        </NavLink>}\r\n\r\n\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React, {useContext} from 'react';\r\nimport {Box, Button, Container, Grid} from \"@material-ui/core\";\r\nimport {Context} from \"../index\";\r\nimport firebase from \"firebase\";\r\n\r\n\r\nconst Login = () => {\r\n    const {auth} = useContext(Context)\r\n\r\n    const login = async () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider()\r\n        const {user} = await auth.signInWithPopup(provider)\r\n        console.log(user)\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight - 50}}\r\n                  alignItems={'center'}\r\n                  justify={'center'}\r\n            >\r\n                <Grid style={{width: 400, background: 'lightgray'}}\r\n                      container\r\n                      alignItems={'center'}\r\n                      justify={'center'}\r\n                >\r\n                    <Box p={5}>\r\n                        <Button onClick={login} variant={'outlined'}>\r\n                            Войти с помощью Google\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport {Box, Button, Container, Grid} from \"@material-ui/core\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight - 50}}\r\n                  alignItems={'center'}\r\n                  justify={'center'}\r\n            >\r\n                <Grid container\r\n                      alignItems={'center'}\r\n                      justify={'center'}\r\n                >\r\n                    <div className=\"lds-hourglass\"/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Loader;","import {CHAT_ROUTE, LOGIN_ROUTE} from \"./utils/consts\";\r\nimport Login from \"./components/Login\";\r\nimport Chat from \"./components/Chat\";\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Login\r\n    }\r\n]\r\nexport const privateRoutes = [\r\n    {\r\n        path: CHAT_ROUTE,\r\n        Component: Chat\r\n    }\r\n]","import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {Avatar, Button, Container, Grid, TextField} from \"@material-ui/core\";\r\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\r\nimport Loader from \"./Loader\";\r\nimport firebase from \"firebase\";\r\n\r\nconst Chat = React.memo( () => {\r\n    const {auth, firestore} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n    const [value, setValue] = useState('')\r\n    const [messages, loading] = useCollectionData(\r\n        firestore.collection('messages').orderBy('createdAt')\r\n    )\r\n    const [scrollStatus, setScrollStatus] = useState('initial')\r\n\r\n    const bottomAnchor = useRef(null)\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault()\r\n        firestore.collection('messages').add({\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n            text: value,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setValue('')\r\n    }\r\n    const onScroll = e => {\r\n        const element = e.currentTarget\r\n        if (Math.abs((element.scrollHeight-element.scrollTop) - element.clientHeight) > 20){\r\n            scrollStatus !== 'manual' && setScrollStatus('manual')\r\n        } else{\r\n            scrollStatus === ('manual') && setScrollStatus('auto')\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        console.log(scrollStatus)\r\n        if (bottomAnchor.current && scrollStatus === 'initial'){\r\n            bottomAnchor.current.scrollIntoView()\r\n            setScrollStatus('auto')\r\n        }\r\n        if (scrollStatus === 'auto'){\r\n            bottomAnchor.current?.scrollIntoView({behavior:\"smooth\"})\r\n        }\r\n        // return () => {\r\n        //     setScrollStatus('initial')\r\n        // }\r\n    },[messages])\r\n\r\n\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container\r\n                  style={{height: window.innerHeight - 50, paddingTop: 20}}\r\n                  justify={'center'}\r\n            >\r\n                <div onScroll={onScroll} style={{width: '80%', height: '70%', border: '1px solid black', overflowY: 'auto'}}>\r\n                    {messages.map(message =>\r\n                        <div key={message.createdAt}\r\n                             style={{\r\n                                 margin: 10,\r\n                                 border: user.uid === message.uid ? '1px solid green' : '1px solid red',\r\n                                 marginLeft: user.uid === message.uid ? 'auto' : '10px',\r\n                                 width: 'fit-content',\r\n                                 padding:5\r\n                             }}>\r\n                            <Grid container\r\n\r\n                            >\r\n                                <Avatar src={message.photoURL}/>\r\n                                <div>{message.displayName}</div>\r\n                            </Grid>\r\n                            <div>{message.text}</div>\r\n                        </div>)}\r\n                    <div ref={bottomAnchor}/>\r\n                </div>\r\n                <Grid container\r\n                      direction={'column'}\r\n                      alignItems={\"flex-end\"}\r\n                      style={{width: '80%'}}\r\n                >\r\n                    <TextField variant={'outlined'}\r\n                               fullWidth\r\n                               rowsMax={2}\r\n                               value={value}\r\n                               onChange={e => setValue(e.currentTarget.value)}\r\n                    />\r\n                    <Button onClick={sendMessage} variant={\"outlined\"}>Отправить</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Chat;","import React, {useContext} from 'react';\r\nimport {Switch, Redirect, Route} from 'react-router-dom'\r\nimport {privateRoutes, publicRoutes} from \"../routes\";\r\nimport {CHAT_ROUTE, LOGIN_ROUTE} from \"../utils/consts\";\r\nimport {Context} from \"../index\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\n\r\nconst AppRouter = () => {\r\n    const {auth} = useContext(Context)\r\n    const [user] = useAuthState(auth)\r\n\r\n    return user\r\n        ? (\r\n            <Switch>\r\n                {privateRoutes.map(({path, Component}) =>\r\n                    <Route key={path} path={path} component={Component} exact/>\r\n                )}\r\n                <Redirect to={CHAT_ROUTE}/>\r\n            </Switch>\r\n        )\r\n        : (\r\n            <Switch>\r\n                {publicRoutes.map(({path, Component}) =>\r\n                    <Route key={path} path={path} component={Component} exact/>\r\n                )}\r\n                <Redirect to={LOGIN_ROUTE}/>\r\n            </Switch>\r\n        )\r\n};\r\n\r\nexport default AppRouter;","import './App.css';\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport AppRouter from \"./components/AppRouter\";\nimport {useContext} from \"react\";\nimport {Context} from \"./index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport Loader from \"./components/Loader\";\n\nfunction App() {\n    const {auth} = useContext(Context)\n    const [user, loading, error] = useAuthState(auth)\n\n    if(loading) {\n        return <Loader/>\n    }\n  return (\n    <HashRouter>\n      <NavBar/>\n        <AppRouter/>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport firebase from \"firebase\";\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\n\n// Initialize Firebase\nfirebase.initializeApp({\n    apiKey: \"AIzaSyDFuGG1kSqUgmNeIYOHxzwokpZoCWwaooc\",\n    authDomain: \"chat-react-test-e535c.firebaseapp.com\",\n    projectId: \"chat-react-test-e535c\",\n    storageBucket: \"chat-react-test-e535c.appspot.com\",\n    messagingSenderId: \"490175842437\",\n    appId: \"1:490175842437:web:7b457a166c5ed76a2e41ec\",\n    measurementId: \"G-DHHY2NCKT9\"\n});\n\nexport const Context = createContext(null)\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nReactDOM.render(\n  <Context.Provider value={{\n      firebase,\n      auth,\n      firestore\n  }}>\n      <App />\n  </Context.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}